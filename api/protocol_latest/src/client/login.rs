use minecrevy_io_str::{McRead, McWrite};

/// Tells the plugin to start the login sequence.
#[derive(Clone, PartialEq, Debug, McRead, McWrite)]
pub struct LoginStart {
    /// The player's username.
    #[mcio(max_len = 16)]
    pub name: String,
}

impl crate::Packet for LoginStart {}

/// Replies to the plugin to allow packet encryption.
#[derive(Clone, PartialEq, Debug, McRead, McWrite)]
pub struct EncryptionResponse {
    /// The shared secret, encrypted with the plugin's public key.
    pub shared_secret: Vec<u8>,
    /// The verify token, encrypted with the plugin's public key.
    pub verify_token: Vec<u8>,
}

impl crate::Packet for EncryptionResponse {}

/// Replies to the plugin's custom handshake flow.
///
/// See [plugin request][`crate::plugin::PluginRequestLoginPacket`] for the plugin side.
#[derive(Clone, PartialEq, Debug, McRead, McWrite)]
pub struct LoginPluginResponse {
    /// Should match the ID generated by the plugin.
    #[mcio(varint)]
    pub id: i32,
    /// True if the client understands the request, false otherwise. No data follows if false.
    pub successful: bool,
    /// The data being communicated.
    #[mcio(length = "remaining")]
    pub data: Vec<u8>,
}

impl crate::Packet for LoginPluginResponse {}
